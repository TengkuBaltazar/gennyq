package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "SBE_INTERN"
    ruleflow-group 'GenerateSearches'
     no-loop true
    when
       not  SearchEntity (code == "SBE_INTERN")
        serviceToken : GennyToken( code == "PER_SERVICE")
     then
     	System.out.println("   Generate "+drools.getRule().getName() );
     	BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken);

		SearchEntity searchBE = new SearchEntity(drools.getRule().getName(), "Intern Detail View")
			.addFilter("PRI_IS_INTERN", true)

			/* Media & Uploads */
			.addColumn("PRI_IMAGE_URL", "Image")
			.addColumn("PRI_VIDEO_URL", "Video")
			.addColumn("PRI_CV", "CV")
			.addColumn("PRI_LINKEDIN_URL", "LinkedIn")

			/* Contact Details */
			.addColumn("PRI_NAME", "Name")
			.addColumn("PRI_FIRSTNAME", "First Name")
			.addColumn("PRI_LASTNAME", "Last Name")
			.addColumn("PRI_PREFERRED_NAME", "Prefered Name")
			.addColumn("PRI_MOBILE", "Mobile")
			.addColumn("PRI_EMAIL", "Email")
			.addColumn("PRI_ADDRESS_FULL", "Address")
			.addColumn("PRI_TRANSPORT", "Transport")

			/* Education Provider */
			.addAssociatedColumn("LNK_EDU_PROVIDER", "PRI_NAME", "Education Provider")
			.addAssociatedColumn("LNK_EDU_PROVIDER", "PRI_IMAGE_URL", "Eduction Provider Image")
			.addColumn("PRI_IMAGE_URL", "Image URL")

			/* Internship Preferences */
			.addAssociatedColumn("LNK_INDUSTRY", "PRI_NAME", "Industry")
			.addAssociatedColumn("LNK_OCCUPATION", "PRI_NAME", "Occupation")
			.addColumn("PRI_CAREER_OBJ", "Career Objectives")
			.addAssociatedColumn("LNK_CURRENT_SOFTWARE", "PRI_NAME", "Proficient Software")
			.addAssociatedColumn("LNK_FUTURE_SOFTWARE", "PRI_NAME", "Future Software")

			/*Internship Specifications */
			.addColumn("PRI_START_DATE", "Internship Start Date")
			.addColumn("PRI_ASSOC_DURATION", "Internship Duration (Weeks)")
			.addAssociatedColumn("LNK_DAYS_PER_WEEK", "PRI_NAME", "Days per week")
			.addAssociatedColumn("LNK_WHICH_DAYS", "PRI_NAME", "Which Days")
			.addColumn("PRI_PREV_PERIOD", "Tenure")
			/* .addAssociatedColumn("LNK_INTERNSHIP", "PRI_WHICH_DAYS_STRIPPED", "Days of Week") */

			/* Experience */
			.addColumn("PRI_PREV_JOB_TITLE", "Title")
			.addColumn("PRI_PREV_EMPLOYER", "Employer")
			.addColumn("PRI_PREV_DESCRIPTION", "Description of Role")
			.addAssociatedColumn("LNK_INTERN_PREV_INDUSTRY", "PRI_NAME", "Previous Industry")

			/*Agent Details*/
			.addAssociatedColumn("LNK_AGENT", "PRI_IMAGE_URL", "Agent Image")
			.setDisplayMode("DETAIL_VIEW:CV")
			.setPageStart(0)
			.setPageSize(GennySettings.defaultPageSize);

		searchBE.setRealm(serviceToken.getRealm());
		insert(searchBE);
		VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());

end
