package life.genny.rules;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.Answers;
import io.vertx.core.json.JsonObject;
import org.json.JSONObject;
import java.util.Map;
import java.util.HashMap;
import life.genny.utils.VertxUtils;
import life.genny.utils.DropdownUtils;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.EntityEntity;
import life.genny.qwanda.attribute.Attribute;
import life.genny.qwanda.attribute.AttributeLink;
import life.genny.qwandautils.JsonUtils;
import java.util.List;
import java.util.ArrayList;

rule "HELPER_EDU_PRO_REP_TEA"
    ruleflow-group 'DataProcessing'
        salience 6000 
    when
	  userToken : GennyToken (code != "PER_SERVICE" )
	  serviceToken : GennyToken (code == "PER_SERVICE" )
	  answer : Answer( attributeCode == "LNK_EDU_PROVIDER" && targetCode matches "TEA_.*")
	  answersToSave : Answers()
	  ruleDetails : RuleDetails()
	  output : OutputParam( )
	  beUtils : BaseEntityUtils( )

     then
 		System.out.println(drools.getRule().getName()+" - Rule fired! Processing Answer/Data : " + answer );

		answersToSave.add(answer);
		
		String code = answer.getValue();
		System.out.println("code :: " + code);

		/* set the LNK_EDU_PROVIDER attribute to empty string since LNK_EDU_PRO_REP attribute is changed */
		Answer eduProRepAnswer = new Answer(userToken.getUserCode(), answer.getTargetCode(), "LNK_EDU_PRO_REPS", "", false, true);
		answersToSave.add(eduProRepAnswer);

		String eduProCode = code.replace("\"", "").replace("[", "").replace("]", "");
		System.out.println("eduProCode  :: " + eduProCode);
		BaseEntity baseEntity = beUtils.getBaseEntityByCode(eduProCode);
		
		/* Send the updated baseenttity to the frontend */
		QDataBaseEntityMessage msg = new QDataBaseEntityMessage(baseEntity);
		msg.setToken(beUtils.getGennyToken().getToken());
		msg.setReplace(true);
		VertxUtils.writeMsg("webcmds",JsonUtils.toJson(msg));

		/* dropdown search here For internship */
		DropdownUtils dropdownEduProReps = new DropdownUtils(serviceToken);
		dropdownEduProReps.setNewSearch("Trainer Dropdown", "Fetch Trainer Dropdown Items")
											.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "PER_%")
											.addFilter("PRI_IS_EDU_PRO_REP", true)
											.addFilter("LNK_EDU_PROVIDER", SearchEntity.StringFilter.EQUAL, code)
											.setPageStart(0)
											.setPageSize(1000);
		
		/* Send the dropdown options */
		dropdownEduProReps.sendSearchResults("GRP_EDU_PRO_REP_SELECTION", "LNK_ITEM", "ITEM", true, false, userToken, false);
 		System.out.println(drools.getRule().getName() + " - dropdown search sent");

		retract(answer);

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
		update(output);

end