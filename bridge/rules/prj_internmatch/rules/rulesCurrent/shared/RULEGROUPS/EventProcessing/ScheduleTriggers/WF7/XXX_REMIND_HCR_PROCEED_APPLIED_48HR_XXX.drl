package life.genny.rules;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import java.util.List;
import java.util.ArrayList;

import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QScheduleMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QScheduleMessage;
import life.genny.utils.BucketUtils;
import life.genny.utils.TableUtils;
import life.genny.utils.ShleemyUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;
import life.genny.qwandautils.GennySettings;
import life.genny.notifications.EmailHelper;

rule "REMIND_HCR_PROCEED_APPLIED_48HR"
    ruleflow-group 'EventProcessing'
    no-loop true
    salience 5
    when
   		$message : QEventMessage(data.code == "SCHEDULE_INTERN_PROCEED_APPLIED_48HR")
   		userToken : GennyToken  ()
		serviceToken : GennyToken (code == "PER_SERVICE" )

     then
 		System.out.println(drools.getRule().getName() + " : Rule fired" );
 		System.out.println("Current Time is "+LocalDateTime.now());
 		
 		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
		
		String targetCode = $message.getData().getTargetCode();
		System.out.println("targetCode: " +targetCode);
		
		String user = userToken.getUserCode();
		System.out.println("user: " +user);

		BaseEntity appBE = beUtils.getBaseEntityByCode(targetCode);
		if (appBE != null) {
	
			String appStatus = appBE.getValue("PRI_STATUS", null);
			System.out.println("appStatus = " + appStatus);

			if (appStatus.equals("APPLIED"){
				/* CHANGE CARD COLOUR */
				Answer answerColour = new Answer(serviceToken.getUserCode(), appBE.getCode(), "PRI_STATUS_COLOR", "warning");
				beUtils.saveAnswer(answerColour);
				System.out.println("Answer done" +answerColour);
				
				VertxUtils.sendToFrontEnd(userToken, answerColour);
				System.out.println("sendToFrontEnd done");
				
				
				/* PUBLISH CARD COLOUR */
				/*BaseEntity targetBE  = beUtils.getBaseEntityByCode(targetCode);*/
		
				QDataBaseEntityMessage msg = new QDataBaseEntityMessage(appBE);
				msg.setToken(userToken.getToken());
				
				SearchEntity searchBE = new SearchEntity(drools.getRule().getName(), "Agents")
					.addSort("PRI_NAME","Name",SearchEntity.Sort.ASC)
					.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "PER_%")
					.addFilter("PRI_IS_AGENT", true)
					.addColumn("PRI_NAME", "Name")
		
					.setPageStart(0).setPageSize(1000);
		
				searchBE.setRealm(serviceToken.getRealm());
				
				List<BaseEntity> results = beUtils.getBaseEntitys(searchBE);
				System.out.println("results: " +results);
				
				String[] rxList = new String[2];
				rxList[0] = "SUPERUSER";
				rxList[1] = "AGENT";
				msg.setRecipientCodeArray(rxList);
				
				VertxUtils.writeMsg("project", JsonUtils.toJson(msg));
				System.out.println("writeMsg done");
				
				

				/* SEND EMAIL */			
				String superEmail = appBE.getValue("PRI_SUPER_EMAIL", null);
				System.out.println("superEmail = " + superEmail);
				
				String superMobile = appBE.getValue("PRI_MOBILE", null);
				System.out.println("superMobile = " + superMobile);
				
                String superName = appBE.getValue("PRI_FIRSTNAME", null);
				System.out.println("superName: " + superName);
				

				BaseEntity project = beUtils.getBaseEntityByCode("PRJ_"+ serviceToken.getRealm().toUpperCase());

				String token = KeycloakUtils.getImpersonatedToken(serviceToken.getKeycloakUrl(), serviceToken.getRealm(), project, superEmail, serviceToken.getToken());
				System.out.println("token: " + token);
				
				String urlParentCode = "SBE_APPLIED_APPLICATIONS_"+userToken.getJTI().toUpperCase();
				String urlCode = "ACT_PRI_EVENT_VIEW_APPLICATION";
				String urlTargetCode = appBE.getCode();
		
				/* Encode each section of the url */
				urlParentCode = new String(Base64.getEncoder().encode(urlParentCode.getBytes()));
				urlCode = new String(Base64.getEncoder().encode(urlCode.getBytes()));
				urlTargetCode = new String(Base64.getEncoder().encode(urlTargetCode.getBytes()));
		
				String url = GennySettings.projectUrl+"/home/"+urlParentCode+"/"+urlCode+"/"+urlTargetCode;
				System.out.println("url: " + url);
				
				url = url +"?token=" + token;
				System.out.println("url: " + url);

				if (internEmail != null) {
				
						String subject = "Let's organise an interview!";
						String template_id = "d-e3d8ef886bbc49d1af1bfd63e05b795e";
						
						HashMap<String, String> templateData = new HashMap<String, String>();

						templateData.put("hostCompanyRepName", superName);
                        templateData.put("url", url);
                        
                        System.out.println("-------- EMAIL DATA --------");
                        System.out.println("subject: " +subject);
						System.out.println("template_id: " +template_id);
						System.out.println("email: " +superEmail);
						System.out.println("hostCompanyRepName: " +superName);
						System.out.println("----------------------------");	
					
						List<String> bccList = Arrays.asList("internmatch@outcomelife.com.au");
						EmailHelper.sendGrid(beUtils, internEmail, null, bccList, subject, template_id, templateData, false);
						
					
				} else {
					System.out.println("ERROR Null email");
				}
				
				if (internMobile != null) {   
					System.out.println("internMobile: " +internMobile);        
		            String smsBody = "Hi " + internName + " - You've been registered as an intern on InternMatch. Verify your account and complete your profile here: https://internmatch-interns.gada.io/";
		            SmsHelper smsHelper = new SmsHelper();
			    	smsHelper.deliverSmsMsg(internMobile, smsBody);
		            System.out.println("SMS Sent!!");
        		}
			} else {
				/* DELETE SCHEDULES */
				ShleemyUtils.deleteSchedule(serviceToken, internBE.getCode()+"_INTERN_HCR_APPLIED_48HR");
				ShleemyUtils.deleteSchedule(serviceToken, internBE.getCode()+"_INTERN_HCR_APPLIED_96HR");
			}
		} else {
			System.out.println("appBE is NULL");
		}
		
		retract($message)


end
