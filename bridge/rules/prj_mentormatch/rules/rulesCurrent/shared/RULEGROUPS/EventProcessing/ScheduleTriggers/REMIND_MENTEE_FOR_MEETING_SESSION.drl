package life.genny.rules;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import java.util.List;
import java.util.ArrayList;

import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QScheduleMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QScheduleMessage;
import life.genny.utils.BucketUtils;
import life.genny.utils.TableUtils;
import life.genny.utils.ShleemyUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;
import life.genny.qwandautils.GennySettings;
import life.genny.notifications.EmailHelper;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

rule "REMIND_MENTEE_FOR_MEETING_SESSION"
    ruleflow-group 'EventProcessing'
    no-loop true
    salience 5
    when
   		$message : QEventMessage(data.code == "SCHEDULE_MEETING_REMINDER_24HRS_BEFORE")
   		userToken : GennyToken  ()
		serviceToken : GennyToken (code == "PER_SERVICE" )
		beUtils : BaseEntityUtils ()
     then
 		System.out.println(drools.getRule().getName() + " : Rule fired" );
 		System.out.println("Current Time is "+LocalDateTime.now());
		String targetCode = $message.getData().getTargetCode();
		System.out.println("targetCode: " +targetCode);

		BaseEntity applicationBe = beUtils.getBaseEntityByCode(targetCode);

		BaseEntity menteeBe = beUtils.getBaseEntityFromLNKAttr(applicationBe.getCode(), "LNK_MENTEE");
		BaseEntity mentorBe = beUtils.getBaseEntityFromLNKAttr(applicationBe.getCode(), "LNK_MENTEE");

		String meetingTime = applicationBe.getValue("PRI_MEETING_TIME", null);

		System.out.println("^^^^^^^^^ menteeBeCode = " + menteeBe.getCode());
		System.out.println("^^^^^^^^^ mentorBeCode = " + mentorBe.getCode());
		System.out.println("^^^^^^^^^ meetingTime = " + meetingTime);

		if (menteeBe != null) {

			System.out.println("Reminder: Your upcoming MentorMatch meeting is tomorrow!");

			QMessageGennyMSG msg = new QMessageGennyMSG.Builder("MSG_MENTEE_MEET_AND_GREET_REMINDER")
					.addRecipient(menteeBe)
					.addContext("APPLICATION", applicationBe)
					.addContext("BCC", "PRJ_MENTORMATCH")
					.setUtils(beUtils)
					.send();

		}
		if (mentorBe != null) {
			System.out.println("Reminder: Your upcoming MentorMatch meeting is tomorrow!");
			QMessageGennyMSG msg = new QMessageGennyMSG.Builder("MSG_MENTOR_MEET_AND_GREET_REMINDER")
					.addRecipient(mentorBe)
					.addContext("APPLICATION", applicationBe)
					.addContext("BCC", "PRJ_MENTORMATCH")
					.setUtils(beUtils)
					.send();
			
		}
		retract($message)
end
