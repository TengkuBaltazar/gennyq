package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import java.util.UUID;

import java.util.List;
import java.util.ArrayList;

rule "IS_STUDENT"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 1 
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("STUDENT"))
		newBe : BaseEntity()
 		beUtils : BaseEntityUtils()
	  
     then
 		System.out.println("IS_STUDENT: Rule fired" );
 		System.out.println("IS_STUDENT: newBe = " + newBe.getCode()); 
 		
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_IS_STUDENT", "true"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_STATUS", "REGISTERED"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_STATUS_COLOR", "#5cb85c"));

		newBe = beUtils.getBaseEntityByCode(newBe.getCode());

		if (newBe == null) {
			System.out.println(drools.getRule().getName() + " : Set EDU PRO LINK - newBe fetched is null!");
		} else {
			BaseEntity eduProBE = beUtils.getBaseEntityFromLNKAttr(newBe.getCode(), "LNK_EDU_PROVIDER");
			if (eduProBE == null ) {
				System.out.println(drools.getRule().getName() + " : EDU PRO BASEENTITY is null!");
			} else {
				/* beUtils.createLink(eduProCode, newBe.getCode(), "LNK_CPY", "STUDENT", 1.0); */

				String assocEP = eduProBE.getValue("PRI_NAME", null);
				System.out.println(drools.getRule().getName() + " - assocEP Name: " + assocEP);
				
				if (assocEP != null) {
					beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_ASSOC_EP", assocEP));
					beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_EDU_PROVIDER_CODE", eduProBE.getCode()));
				}
			}

			/* CREATE BE'S TO SAVE THE USERS RESULTS */	
			for (int i = 1; i <= 10; i++) {
				String newUUID = UUID.randomUUID().toString().replaceAll("-", "_").toUpperCase();
				System.out.println(drools.getRule().getName() + ": Creating new results BE for scenario " + i + " with code RES_" + newUUID);

				BaseEntity resultBE = beUtils.create("RES_" + newUUID, "RES_" + newUUID);
				beUtils.saveAnswer(new Answer(userToken.getUserCode(), "RES_"+ newUUID, "PRI_SCENARIO", String.valueOf(i)));
				beUtils.saveAnswer(new Answer(userToken.getUserCode(), "RES_"+ newUUID, "PRI_USERCODE", newBe.getCode()));
				beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_RESULTS_BE_CODE_S"+i, resultBE.getCode()));
			}
		}

		BaseEntity user = beUtils.getBaseEntityByCode(newBe.getCode());
		String userStr = newBe.getCode();
		String[] userSplit = userStr.split("_");
		String userCode = userSplit[1];
		System.out.println("User "+user+" with userCode = "+userCode);
	 		
		/* Set up in Keycloak */
		String firstname = user.getValue("PRI_FIRSTNAME", null);
		if (firstname != null) {
			String lastname = user.getValue("PRI_LASTNAME", null);
			if (lastname != null) {

				String email = user.getValue("PRI_EMAIL", null);
				if (email != null) {
					/*String userPassword = UUID.randomUUID().toString().substring(0,10);*/
					String tempPassword = "password1";
					/* TODO HACK */
					if (true) {
						String userId = KeycloakUtils.updateUser(userCode,serviceToken.getToken(), serviceToken.getRealm(), email, firstname, lastname,  email, tempPassword, "user", "users");
						userId = userId.toUpperCase();
						Answer keycloakId = new Answer(beUtils.getGennyToken().getUserCode(),newBe.getCode(),"PRI_UUID",userId);
						beUtils.saveAnswer(keycloakId);
						System.out.println("Created User "+email+" in Keycloak with id = "+userId + " and password:"+tempPassword);
					} else {
					     System.out.println("KEYCLOAK USER CREATION DISABLED IN RULE IS_STUDENT");
					}

					String inviteFrom = beUtils.getBaseEntityValueAsString(userToken.getUserCode(), "PRI_NAME");

					HashMap<String, String> templateData = new HashMap<String, String>();

					String templateId = "d-297964cf11514f7c9629ec8aac05403a";
					String subject = "You have been invited to join SafeTrafficTown";

					templateData.put("email", email);
					templateData.put("password", tempPassword);
					templateData.put("inviteFrom", inviteFrom);
					templateData.put("url", GennySettings.projectUrl);
					
					System.out.println(drools.getRule().getName() + " - " + email + " : " + templateId + " : " + subject);

					EmailHelper.sendGrid(beUtils, email, subject, templateId, templateData);
				}
			}
		}


		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
		
		retract(newBe)
	
end
