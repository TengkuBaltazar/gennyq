package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.TableUtils;
import life.genny.utils.SearchUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwandautils.GennySettings;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import life.genny.notifications.SmsHelper;
import java.util.Arrays;

import com.google.gson.*;

import java.util.List;
import java.util.ArrayList;

rule "SET_PRI_STATUS_FOR_INTERN_AS_APPLIED"
    ruleflow-group 'Movement'
    no-loop true
    salience 1
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		answersToSave : Answers()

		newApplication : BaseEntity( code matches "APP_\\S+" )
		associatedInternBe : BaseEntity( code matches "PER_\\S+" )
		bucketCode : String(bucketCode.equals("EMPTY"))
		controlSignalCode : String(controlSignalCode.equals("APPLIED"))

		allowed: Allowed(code == "AGENT" || code == "INTERN" || code == "EDU_PRO_REP" || code == "HOST_CPY_REP")
		beUtils : BaseEntityUtils()
     then

	System.out.println(drools.getRule().getName() + " triggered");



	System.out.println("End of " + drools.getRule().getName());
end