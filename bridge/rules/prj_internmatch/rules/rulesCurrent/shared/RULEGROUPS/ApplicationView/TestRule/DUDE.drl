package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;

import java.util.List;
import java.util.ArrayList;

rule "DUDE"
    ruleflow-group 'TestRule'
    no-loop true
    salience 1 
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		newApplication : BaseEntity()
		controlSignalCode : String("FIRST".equals(controlSignalCode))
		associatedInternBe : BaseEntity()
	  
     then
 		System.out.println("##################################### DUDE: Rule fired" );
 		
 		Answer answer = new Answer(userToken.getUserCode(), newApplication.getCode(),"PRI_STATUS","APPLIED");
 		Answer answer2 = new Answer(userToken.getUserCode(), newApplication.getCode(),"PRI_CODE", newApplication.getCode());
 		BaseEntityUtils beUtils = new BaseEntityUtils(userToken);
 		beUtils.saveAnswer(answer);
 		beUtils.saveAnswer(answer2);
 		
 		System.out.println("##################################### DUDE: associatedInternBe.getCode() = " +associatedInternBe.getCode());
 		
 		String firstname = associatedInternBe.getValue("PRI_FIRSTNAME", null);
 		
 		System.out.println("##################################### DUDE: firstname = " +firstname);
 		
 		System.out.println("##################################### DUDE: ANSWER = " +answer);
 		System.out.println("##################################### DUDE: NEW_APPLICATION = " + newApplication); 
 		
 		retract(newApplication)
 		retract(controlSignalCode)
 		retract(associatedInternBe)
		
end
