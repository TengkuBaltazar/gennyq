package life.genny.rules;
import life.genny.models.GennyToken;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import life.genny.utils.VertxUtils;

rule "IS_MENTEE"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 1000
    when
	 	userToken: GennyToken (code != "PER_SERVICE" )
		serviceToken: GennyToken (code == "PER_SERVICE" )
		output: OutputParam()
		baseEntityType: String("MENTEE".equals(baseEntityType))
		newBe: BaseEntity()
 		beUtils: BaseEntityUtils()
    then
 		System.out.println(drools.getRule().getName() + " : Rule fired" );
 		System.out.println(drools.getRule().getName() + " newBe = " + newBe.getCode());

		/*  Construct answer with Source, Target, Attribute Code, Value */
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_IS_MENTEE", "true"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_MENTEE_CODE", newBe.getCode()));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_STATUS", "OFF_SHORE"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_TRAINING_STATUS", "Incomplete"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_MATCHED_WITH_MENTOR", "INCOMPLETE"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_MEETING_WITH_MENTOR", "INCOMPLETE"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_DISABLED", "false"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_STATUS_COLOR", "#5cb85c"));
		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_USER_PROFILE", "Complete"));
 		Answer ans = new Answer(userToken.getUserCode(), newBe.getCode(), "PRI_PROFILE", "Complete");
 		beUtils.saveAnswer(ans);

		newBe = beUtils.getBaseEntityByCode(newBe.getCode());

		BaseEntity user = beUtils.getBaseEntityByCode(newBe.getCode());
		String firstname = user.getValue("PRI_FIRSTNAME",null);
		String endPoint = GennySettings.projectUrl + "/v7/notes";
		QwandaUtils.apiPostNote(endPoint, userToken.getUserCode(), "ni", userToken.getUserCode(), "Added a Mentee: " + firstname, serviceToken.getToken());

		System.out.println("I just posted the note");
		System.out.println("Note endPoint: " +endPoint);
		System.out.println("Note userToken.getUserCode(): " +userToken.getUserCode());

		if(newBe != null) {
			System.out.println("newBe is " + newBe);

			QDataBaseEntityMessage menteeBeMsg = new QDataBaseEntityMessage(newBe);
            String priProfile = newBe.getValue("PRI_PROFILE",null);
            System.out.println("priUserProfile: "+ priProfile);
			menteeBeMsg.setToken(userToken.getToken());
			VertxUtils.writeMsg("webcmds", JsonUtils.toJson(menteeBeMsg));
		} else {
			System.out.println("newBe is null.");
		}

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */

		retract(newBe)

		System.out.println("End of " + drools.getRule().getName());
end
