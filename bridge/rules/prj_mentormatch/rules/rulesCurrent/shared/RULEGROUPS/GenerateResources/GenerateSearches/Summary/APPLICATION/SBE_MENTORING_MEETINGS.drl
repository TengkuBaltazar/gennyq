package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "SBE_MENTORING_MEETINGS"
   ruleflow-group 'GenerateSearches'
   no-loop true
   when
      not  SearchEntity (code == "SBE_MENTORING_MEETINGS")
      serviceToken : GennyToken( code == "PER_SERVICE")
   then
     	System.out.println("Generate "+drools.getRule().getName() );
     	BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken);

    	SearchEntity searchBE = new SearchEntity(drools.getRule().getName(), "Meetings")
                              .addSort("PRI_CREATED", "Created", SearchEntity.Sort.ASC)
                              .addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "MTS_%")
                              .addFilter("LNK_APPLICATION", SearchEntity.StringFilter.LIKE, "APP_%")
                              
                              /* Table Columns */
								.addColumn("PRI_MEETING_TIME", "MeetingTime")
								.addColumn("PRI_STATUS", "MeetingStatus")
								
                        .setPageStart(0).setPageSize(13);

      searchBE.setRealm(serviceToken.getRealm());

	 insert(searchBE);
     VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());
  	
end
