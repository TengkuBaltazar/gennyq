package life.genny.kogito;

import life.genny.qwandaq.message.QEventMessage;
import life.genny.qwandaq.utils.BaseEntityUtils;
import life.genny.kogito.utils.KogitoUtils;

//global Integer maxAmount;
//global java.util.List approvedApplications;

rule RouteEventTriggerApply when
    msg: QEventMessage( data.code == "ACT_PRI_EVENT_APPLY" )
    beUtils : BaseEntityUtils()
    kogitoUtils : KogitoUtils()
then
   System.out.println("Rule: RouteEventTriggerApply:Detected Intern Application Event ");
   System.out.println("Rule: RouteEventTriggerApply:Detected:msg:"+msg);
   kogitoUtils.triggerWorkflow("application",msg, beUtils.getGennyToken()) ;
end

rule RouteEventTriggerShortlist when
    msg: QEventMessage( data.code == "ACT_PRI_EVENT_SHORTLIST_APPLICATION" )
    beUtils : BaseEntityUtils()
    kogitoUtils : KogitoUtils()
then
   System.out.println("Rule: RouteEventTriggerApply:Detected Intern Shortlist Event ");
   System.out.println("Rule: RouteEventTriggerShortlist:Detected:msg:"+msg);
   String processId = msg.getData().getTargetCode().substring("APP_".length()).toLowerCase();

   System.out.println("ProcessId in rules found to be "+processId);
   kogitoUtils.sendSignal("application", processId, "SHORTLIST",  beUtils.getGennyToken()) ;
end



rule RouteEventTriggerInterview when
    msg: QEventMessage( data.code == "ACT_PRI_EVENT_INTERVIEW_APPLICATION" )
    beUtils : BaseEntityUtils()
    kogitoUtils : KogitoUtils()
then
   System.out.println("Rule: RouteEventTriggerInterview:Detected Intern Interview Event ");
   System.out.println("Rule: RouteEventTriggerInterview:Detected:msg:"+msg);
   String processId = msg.getData().getTargetCode().substring("APP_".length()).toLowerCase();

   System.out.println("ProcessId in rules found to be "+processId);
   kogitoUtils.sendSignal("application", processId, "INTERVIEW",  beUtils.getGennyToken()) ;
end

rule RouteEventTriggerOffered when
    msg: QEventMessage( data.code == "ACT_PRI_EVENT_OFFERED_APPLICATION" )
    beUtils : BaseEntityUtils()
    kogitoUtils : KogitoUtils()
then
   System.out.println("Rule: RouteEventTriggerOffered:Detected Intern Offered Event ");
   System.out.println("Rule: RouteEventTriggerOffered:Detected:msg:"+msg);
   String processId = msg.getData().getTargetCode().substring("APP_".length()).toLowerCase();

   System.out.println("ProcessId in rules found to be "+processId);
   kogitoUtils.sendSignal("application", processId, "OFFER",  beUtils.getGennyToken()) ;
end

rule RouteEventTriggerPlaced when
    msg: QEventMessage( data.code == "ACT_PRI_EVENT_PLACED_APPLICATION" )
    beUtils : BaseEntityUtils()
    kogitoUtils : KogitoUtils()
then
   System.out.println("Rule: RouteEventTriggerPlaced:Detected Intern Placed Event ");
   System.out.println("Rule: RouteEventTriggerPlaced:Detected:msg:"+msg);
   String processId = msg.getData().getTargetCode().substring("APP_".length()).toLowerCase();

   System.out.println("ProcessId in rules found to be "+processId);
   kogitoUtils.sendSignal("application", processId, "PLACED",  beUtils.getGennyToken()) ;
end

rule RouteEventTriggerProgress when
    msg: QEventMessage( data.code == "ACT_PRI_EVENT_INPROGRESS_APPLICATION " )
    beUtils : BaseEntityUtils()
    kogitoUtils : KogitoUtils()
then
   System.out.println("Rule: RouteEventTriggerProgress:Detected Intern Progress Event ");
   System.out.println("Rule: RouteEventTriggerProgress:Detected:msg:"+msg);
   String processId = msg.getData().getTargetCode().substring("APP_".length()).toLowerCase();

   System.out.println("ProcessId in rules found to be "+processId);
   kogitoUtils.sendSignal("application", processId, "PROGRESS",  beUtils.getGennyToken()) ;
end

rule RouteEventTriggerSignal when
    msg: QEventMessage( data.code == "ACT_PRI_EVENT_VIEW" )
    beUtils : BaseEntityUtils()
    kogitoUtils : KogitoUtils()
then
    System.out.println("Rule: RouteEventTriggerSignal:Signal Application Event ");
    System.out.println("Rule: RouteEventTriggerSignal:Detected:msgCode:"+msg.getData().getTargetCode());
    String processId = kogitoUtils.fetchProcessId("Application", "internCode", msg.getData().getTargetCode(),
			beUtils.getGennyToken());
    System.out.println("ProcessId in rules found to be "+processId);
   kogitoUtils.sendSignal("application", processId, "ARCHIVE",  beUtils.getGennyToken()) ;
end





// rule SmallDepositReject when
//     $l: LoanApplication( applicant.age >= 20, deposit < 1000, amount > 2000 )
// then
//     modify($l) { setApproved(false) };
// end

// rule LargeDepositApprove when
//     $l: LoanApplication( applicant.age >= 20, deposit >= 1000, amount <= maxAmount )
// then
//     modify($l) { setApproved(true) };
// end

// rule LargeDepositReject when
//     $l: LoanApplication( applicant.age >= 20, deposit >= 1000, amount > maxAmount )
// then
//     modify($l) { setApproved(false) };
// end

// rule NotAdultApplication when
//     $l: LoanApplication( applicant.age < 20 )
// then
//     modify($l) { setApproved(false) };
// end

// rule CollectApprovedApplication when
//     $l: LoanApplication( approved )
// then
//     approvedApplications.add($l);
// end
