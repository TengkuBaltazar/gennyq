package life.genny.rules;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.qwanda.message.QEventMessage;
import life.genny.utils.BucketUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;
import life.genny.model.NodeStatus;

rule "INTERVIEW_START_DATE"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "QUE_TEST_EDIT" && (data.rootCode == "QUE_DETAIL_VIEW_CONTROL_GRP"))
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
		ruleDetails : RuleDetails()
    then
		System.out.println("Processing INTERVIEW_START_DATE click event : " + $message );
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing : " + $message );
		
		String code = $message.getData().getCode(); 
		String workflowSignalCode = "INTERVIEW_START_DATE";

		output.setTypeOfResult("SIGNAL");
		output.setResultCode("START_"+workflowSignalCode);
		output.setTargetCode($message.getData().getTargetCode());
		
		String workflowBeCode = $message.getData().getTargetCode();
		System.out.println("$$$$$$$$$$$$$$$$$$$$$$$$ workflowBeCode: " + workflowBeCode);
		
		System.out.println("$$$$$$$$$$$$$$$$$$$$$$$$ targetCode: " + output.getTargetCode());
		
		SessionFacts facts = new SessionFacts(serviceToken, userToken, output.getTargetCode());
		
		System.out.println("START SIGNAL: " +workflowSignalCode);
	
	
		retract( $message);
	end
