package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.jbpm.customworkitemhandlers.ShowFrame;
import java.util.UUID;

import java.util.List;
import java.util.ArrayList;

rule "SEND_QUESTION_ASKS"
    ruleflow-group 'ScenarioProcessing'
    no-loop true
    salience 5
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		questionGroup : String(questionGroup matches "QUE_STT.*")
		output : OutputParam()

     then
		System.out.println(drools.getRule().getName() + ": Rule fired");
 		
 		BaseEntityUtils beUtils = new BaseEntityUtils(userToken);

		System.out.println(drools.getRule().getName() + " - Setting up Asks, questionGroup = " + questionGroup);

		/* GRAB DESIRED QUESTION GROUP AND SET TITLE NAME */
		QwandaMessage placeholderMsg = QuestionUtils.getQuestions(userToken.getUserCode(), userToken.getUserCode(), questionGroup, serviceToken.getToken());
		QDataAskMessage askMsg = new QDataAskMessage(placeholderMsg.asks.getItems()[0]);
		Ask unityAskGrp = askMsg.getItems()[0];

		/* ENABLE/DISABLE NEXT BUTTON */
		unityAskGrp.getChildAsks()[2].setDisabled(true);
		unityAskGrp.getChildAsks()[3].setDisabled(false);
		unityAskGrp.getChildAsks()[4].setDisabled(false);

		System.out.println(drools.getRule().getName() + " - Checking for LNK entities");

		if ( unityAskGrp.getChildAsks()[0].getAttributeCode().startsWith("LNK_")) {
			System.out.println(drools.getRule().getName() + " - Sending LNK entities");
			ShowFrame.sendSelectionItems(unityAskGrp.getChildAsks()[0].getAttributeCode(), userToken, serviceToken, false);
		}

		/* CREATE QDataMessage AND SEND TO FRONTEND */
		askMsg.setToken(userToken.getToken());
		/*askMsg.setReplace(true);*/
		String sendingMsg = JsonUtils.toJson(askMsg);

		System.out.println(drools.getRule().getName() + " - Sending next question: " + questionGroup + "_QUES");

		VertxUtils.writeMsg("webcmds", sendingMsg);
		
		output.setTypeOfResult("NONE");
  	    output.setResultCode("NONE");  /* dont display anything new */
			
end