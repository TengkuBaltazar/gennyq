package life.genny.rules;

import java.io.IOException;

global life.genny.qwanda.message.QBulkMessage payload;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.CapabilityUtils;
import life.genny.qwanda.Answer;
import java.util.List;
import java.util.ArrayList;
import life.genny.model.OutputParamTreeSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.utils.TableUtils;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwandautils.JsonUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import org.drools.core.spi.KnowledgeHelper;

rule "FILTER_INTERNSHIP_FULL_TABLE"
	ruleflow-group 'SearchFilters'
	salience 10000
	no-loop true
	when
		userToken : GennyToken ( code != "PER_SERVICE" )
		searchBE: SearchEntity( code matches "SBE_INTERNSHIPS_.*" )
		allowed: Allowed(code == "AGENT" )

	then
		System.out.println(drools.getRule().getName() + " triggered");

		System.out.println("searchCode   :: " + searchBE.getCode());

		searchBE.addColumn("PRI_ROLES_AND_RESPONSIBILITIES", "Roles and Responsibilities");
		searchBE.addColumn("PRI_BASE_LEARNING_OUTCOMES", "Base Learning Outcomes");
		searchBE.addColumn("PRI_SPECIFIC_LEARNING_OUTCOMES", "Technical Skills Learning Outcomes");
		/*searchBE.addColumn("PRI_SOFTWARE", "Software");*/
		searchBE.addColumn("PRI_WHICH_DAYS_STRIPPED", "Which Days");
		/*searchBE.addColumn("PRI_WORKSITE", "Worksite");*/
		searchBE.addColumn("PRI_ASSOC_NUM_INTERNS", "No of Interns");
		searchBE.addColumn("PRI_VIDEO_URL", "Video");

		/* Create  QDataBaseEntityMessage for SearchEntity */
		QDataBaseEntityMessage msg = new QDataBaseEntityMessage(searchBE);
		msg.setAliasCode("SBE");
		payload.add(msg);

		drools.getKnowledgeRuntime().setGlobal("payload", payload);
end
