package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import java.util.List;
import java.util.ArrayList;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import org.json.JSONArray;

import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.qwanda.message.QEventMessage;
import life.genny.utils.BucketUtils;
import life.genny.utils.TableUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;

rule "SAVE_PRE_AGREEMENT_DOC_DATA"
    ruleflow-group 'Movement'
    no-loop true
    salience 1
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		newApplication : BaseEntity()
		output : OutputParam()
		bucketCode : String(bucketCode.equals("OFFERED"))
		controlSignalCode : String(controlSignalCode.equals("PRE_EDIT_AGREEMENT"))


     then
 		System.out.println("SAVE_PRE_AGREEMENT_DOC_DATA: Rule fired" );

		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);

		DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("dd-MMM-yy");

		LocalDate localDate_start_date = newApplication.getValue("PRI_START_DATE", null);
		String start_date = "";
		/*LocalDate localDate_start_date = LocalDate.parse(start_date);*/

		if (localDate_start_date != null) {
			start_date = (String) localDate_start_date.format(dateFormat);
		}

		System.out.println("start_date = " +start_date);
		if (start_date != null || !start_date.isEmpty()) {
				beUtils.saveAnswer(new Answer(userToken.getUserCode(), newApplication.getCode(), "PRI_START_DATE", localDate_start_date));
				System.out.println("start_date: " + start_date);

				beUtils.saveAnswer(new Answer(userToken.getUserCode(), newApplication.getCode(), "PRI_WORD_START_DATE", start_date));
				System.out.println("word_start_date: " + start_date);

		} else {
			System.out.println("ERROR: Null start_date");
		}




		retract(newApplication)
		retract(bucketCode)
		retract(controlSignalCode)

end