package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import java.util.UUID;

import java.util.List;
import java.util.ArrayList;

rule "SEND_RESULTS_BE"
    ruleflow-group 'ResultsProcessing'
    no-loop true
    salience 0
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		selectionString : String ( selectionString matches "RENDER_RESULTS_S.*" )
		output : OutputParam()
		beUtils : BaseEntityUtils()

     then
		System.out.println(drools.getRule().getName() + ": Rule fired");
 		
		String scenario = selectionString.split(":")[0].replace("RENDER_RESULTS_S", ""); 
		String targetCode = selectionString.split(":")[1];

		BaseEntity resultBe = beUtils.getBaseEntityFromLNKAttr(targetCode, "PRI_RESULTS_BE_CODE_S"+scenario);

		if (resultBe != null) {

			BaseEntity userBE = beUtils.getBaseEntityByCode(targetCode);
			
			String name = userBE.getValueAsString("PRI_NAME");
			String email = userBE.getValueAsString("PRI_EMAIL");

			if (name != null) {
				beUtils.saveAnswer(new Answer(userToken.getUserCode(), resultBe.getCode(), "PRI_NAME", name));	
			} else {
				System.out.println(drools.getRule().getName()+" - USERS NAME WAS NULL");
			}
			if (email != null) {
				beUtils.saveAnswer(new Answer(userToken.getUserCode(), resultBe.getCode(), "PRI_EMAIL", email));	
			} else {
				System.out.println(drools.getRule().getName()+" - USERS EMAIL WAS NULL");
			}
			
			BaseEntity resultTemplateBE = beUtils.getBaseEntityByCode("RES_DATA_SCENARIO_" + scenario);

			if (resultTemplateBE != null) {

				for (EntityAttribute attr : resultTemplateBE.getBaseEntityAttributes()) {
					resultBe.getBaseEntityAttributes().add(attr);
				}

				QDataBaseEntityMessage resultBeMsg = new QDataBaseEntityMessage(resultBe);
				resultBeMsg.setToken(userToken.getToken());
				resultBeMsg.setReplace(true);

				System.out.println(drools.getRule().getName()  + " - Sending results BE");
				VertxUtils.writeMsg("webcmds", JsonUtils.toJson(resultBeMsg));

			} else {
				System.out.println("Could not find template results BE");
			}
		} else {
			System.out.println("Could not find linked results BE");
		}
			
		retract(selectionString);
end
