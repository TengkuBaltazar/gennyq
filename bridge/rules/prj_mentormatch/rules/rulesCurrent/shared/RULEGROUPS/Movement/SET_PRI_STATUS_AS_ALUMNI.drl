package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import java.util.List;
import java.util.ArrayList;

import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.qwanda.message.QEventMessage;
import life.genny.utils.BucketUtils;
import life.genny.utils.TableUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;
import life.genny.qwandautils.GennySettings;

rule "SET_PRI_STATUS_AS_ALUMNI"
    ruleflow-group 'Movement'
    no-loop true
    salience 1
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		newApplication : BaseEntity()
		output : OutputParam()
		bucketCode : String(bucketCode.equals("MENTORING"))
		controlSignalCode : String(controlSignalCode.equals("ALUMNI"))


     then
 		System.out.println("SET_PRI_STATUS_AS_ALUMNI: Rule fired" );


 		Answer answer = new Answer(userToken.getUserCode(),newApplication.getCode(),"PRI_STATUS","ALUMNI");
 		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
 		beUtils.saveAnswer(answer);


		System.out.println("SET_PRI_STATUS_AS_ALUMNI: Answer = " + answer);
		System.out.println("SET_PRI_STATUS_AS_ALUMNI: newApplication = " + newApplication);


		TableUtils.moveEntity(newApplication.getCode(), "SBE_ROTARY_MENTORING", "SBE_COMPLETED", beUtils);


		/* Save status to the PER */
		/*String assocIntern = newApplication.getValue("PRI_INTERN_CODE", null);
		System.out.println("assocIntern: " +assocIntern);
		if (assocIntern != null){
			BaseEntity assocInternBe = beUtils.getBaseEntityByCode(assocIntern);
			System.out.println("assocInternBe: " +assocInternBe);

			String internStatus = assocInternBe.getValue("PRI_STATUS", null);
			System.out.println("internStatus: " +internStatus);

			if (internStatus.equals("AVAILABLE") || internStatus.equals("APPLIED") || internStatus.equals("SHORTLISTED") || internStatus.equals("INTERVIEWED") || internStatus.equals("OFFERED")){
				Answer answerStatus = new Answer(userToken.getUserCode(), assocInternBe.getCode(), "PRI_STATUS", "PLACED");
				beUtils.saveAnswer(answerStatus);
				System.out.println("answerStatus: " +answerStatus);
			}

			String appCode = newApplication.getCode();
        	System.out.println(appCode);

        	String[] strippedAppCode = appCode.split("-");
        	System.out.println(strippedAppCode[0]);

        	String assocAppCode = "PRI_" +strippedAppCode[0];
        	System.out.println(assocAppCode);

        	Answer answerApp = new Answer(userToken.getUserCode(), assocInternBe.getCode(), assocAppCode, appCode);
			beUtils.saveAnswer(answerApp);
			System.out.println("answerApp: " +answerApp);


			/* Remove from Available bucket
			Answer answerDisable = new Answer(userToken.getUserCode(), assocInternBe.getCode(), "PRI_DISABLED", true);
			beUtils.saveAnswer(answerDisable);
			System.out.println("answerDisable: " +answerDisable);
			TableUtils.moveEntity(assocInternBe.getCode(), "SBE_AVAILABLE_INTERNS", null, beUtils);

		} else {
			System.out.println("$$$ assocIntern PRI_INTERN_CODE was null $$$");
		}*/


		/*BaseEntity user = beUtils.getBaseEntityByCode(newApplication.getCode());
		String name = user.getValue("PRI_INTERN_NAME",null);

		String title = user.getValue("PRI_TITLE",null);
		String assoc_hc = user.getValue("PRI_ASSOC_HC",null);


		String endPoint = GennySettings.projectUrl + "/v7/notes";*/
		/*String endPoint = "https://internmatch-cyrus.gada.io/v7/notes";

		String tag = "ni";

		QwandaUtils.apiPostNote(endPoint, userToken.getUserCode(), tag, userToken.getUserCode(), name + " has been placed for the internship " + title + " at " + assoc_hc, serviceToken.getToken());

		System.out.println("I just posted the note");
		System.out.println("Note endPoint: " +endPoint);
		System.out.println("Note userToken.getUserCode(): " +userToken.getUserCode());*/



		retract(newApplication)
		retract(bucketCode)
		retract(controlSignalCode)

end
