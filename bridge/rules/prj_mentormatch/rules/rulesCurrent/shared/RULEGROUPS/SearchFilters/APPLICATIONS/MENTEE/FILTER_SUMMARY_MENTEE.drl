package life.genny.rules;

import java.io.IOException;

global life.genny.qwanda.message.QBulkMessage payload;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.CapabilityUtils;
import life.genny.qwanda.Answer;
import java.util.List;
import java.util.ArrayList;
import life.genny.model.OutputParamTreeSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.utils.TableUtils;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwandautils.JsonUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import org.drools.core.spi.KnowledgeHelper;

rule "FILTER_SUMMARY_MENTEE"
	ruleflow-group 'SearchFilters'
	salience 10000
	no-loop true
	when
		userToken : GennyToken ( code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		allowed : Allowed(code == "MENTEE")
		searchBE: SearchEntity( code matches "SBE_SUMMARY_MENTEE_.*" )

	then
		System.out.println(drools.getRule().getName() + " triggered");

		System.out.println("userCode     :: " + userToken.getUserCode());
		System.out.println("searchCode   :: " + searchBE.getCode());

		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
		BaseEntity currentUser = beUtils.getBaseEntityByCode(userToken.getUserCode());

		/*String trainingStatus = currentUser.getValue("PRI_TRAINING_STATUS", null);*/

		searchBE.addFilter("PRI_MENTEE_CODE", SearchEntity.StringFilter.LIKE, userToken.getUserCode());


		/* Create  QDataBaseEntityMessage for SearchEntity */
		QDataBaseEntityMessage msg = new QDataBaseEntityMessage(searchBE);
		msg.setAliasCode("SBE");
		payload.add(msg);

		QDataBaseEntityMessage msgTwo = new QDataBaseEntityMessage(currentUser);
		msgTwo.setToken(userToken.getToken());
		msgTwo.setReplace(true);
		VertxUtils.writeMsg("webcmds", JsonUtils.toJson(msgTwo));

		drools.getKnowledgeRuntime().setGlobal("payload", payload);
		retract(allowed);
end
