package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "SBE_MENTOR"
    ruleflow-group 'GenerateSearches'
     no-loop true
    when
       not  SearchEntity (code == "SBE_MENTOR")
        serviceToken : GennyToken( code == "PER_SERVICE")
     then
     	System.out.println("   Generate "+drools.getRule().getName() );

     	SearchEntity searchBE = new SearchEntity("SBE_MENTOR", "Mentors")
						.addSort("PRI_FIRSTNAME", "Name", SearchEntity.Sort.ASC)

						.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "PER_%")
						.addFilter("PRI_IS_MENTOR", true)

						.addColumn("PRI_STATUS", "Status", "Position1")
						.addColumn("PRI_NAME", "Name", "Position2")
						.addColumn("PRI_EMAIL", "Email", "Position3")
						.addColumn("PRI_MOBILE", "Mobile", "Position4")
						.addColumn("PRI_ADDRESS_FULL", "Address", "Position5")
						
						.setDisplayMode("DETAIL_VIEW:DEFAULT_TEMPLATE")
						.setPageStart(0)
						.setPageSize(GennySettings.defaultPageSize);

		searchBE.setRealm(serviceToken.getRealm());
		insert(searchBE);

		VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());

end
