package life.genny.rules;

import life.genny.models.GennyToken;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import java.time.LocalDateTime;
import java.time.Period;
import life.genny.utils.VertxUtils;
import java.time.format.DateTimeFormatter;

rule "HELPER_PRI_DATE_OF_BIRTH"
    ruleflow-group 'DataProcessing'
    salience 500
    no-loop true
    when
        userToken : GennyToken (code != "PER_SERVICE")
        serviceToken : GennyToken (code == "PER_SERVICE")
        beUtils : BaseEntityUtils()
	    answer : Answer(attributeCode == "PRI_DATE_OF_BIRTH")
	    output : OutputParam()
    then
 		System.out.println(drools.getRule().getName() + "Processing Helper Answer/Data : " + answer);

		String sourceCode = beUtils.getGennyToken().getUserCode();
		String targetCode = answer.getTargetCode();

		/* Check Mentor Age */
        boolean isEligible = false;

        String value =  answer.getValue();
        System.out.println(drools.getRule().getName() + " DOB value : " + value);

        if ((value != null) && (!value.isEmpty())) {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
            LocalDateTime dateTime = LocalDateTime.parse(value, formatter);
            LocalDateTime now = LocalDateTime.now();
            /*calculates the amount of time between two dates and returns the years*/
            int age = Period.between(dateTime.toLocalDate(), now.toLocalDate()).getYears();
            System.out.println("Age :: " + age);
            isEligible = age >= 18;

            Answer mentorAgeAnswer = new Answer(sourceCode, targetCode, "PRI_ELIGIBLE", isEligible);
            /*Saving for edit pages*/
            beUtils.saveAnswer(mentorAgeAnswer);
            VertxUtils.sendToFrontEnd(userToken, mentorAgeAnswer);
        }

		output.setTypeOfResult("NONE");
  	    output.setResultCode("NONE");  /* dont display anything new */
end
