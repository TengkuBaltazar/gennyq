package life.genny.gadaq;

import life.genny.qwandaq.message.QEventMessage;
import life.genny.qwandaq.models.UserToken;
import life.genny.qwandaq.utils.CacheUtils;
import life.genny.gadaq.utils.KogitoUtils;

rule RouteAuthInit 
when
	msg: QEventMessage( data.code == "AUTH_INIT" )
	userToken : UserToken()
	kogitoUtils : KogitoUtils()
then
	System.out.println("Routing AUTH_INIT!");

	// TODO: move this to bridge
	if (userToken.hasRole("test")) {
		System.out.println("Saving token for " + userToken.getUsername());
		System.out.println("Key: TOKEN:" + userToken.getUserCode() + ", Value: " + userToken.getToken());
		CacheUtils.writeCache(userToken.getRealm(), "TOKEN:"+userToken.getUserCode(), userToken.getToken());
	}

	kogitoUtils.triggerWorkflow("authinit", msg);
end

rule RouteEventDefault 
salience 0
when
	msg: QEventMessage()
	userToken : UserToken()
	kogitoUtils : KogitoUtils()
then
	System.out.println("Routing Default Event!");

	kogitoUtils.triggerWorkflow(msg.getData().getCode(), msg);
end

