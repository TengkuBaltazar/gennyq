package life.genny.rules;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;

rule "INTERNSHIP_SORT_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "QUE_INTERNSHIPS_SORT_.*")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
		ruleDetails : RuleDetails()
    then
		System.out.println("Processing INTERNSHIP_SORT_CLICK_EVENT : " + $message );
		
		System.out.println(ruleDetails+" "+drools.getRule().getName()+" Processing : " + $message );
		
		Boolean cache = true;
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
		
		String code = $message.getData().getCode();
		code = StringUtils.removeStart(code,"QUE_");
		TableUtils.searchTable(beUtils, "SBE_"+code, cache);
	
		retract( $message);
	end
