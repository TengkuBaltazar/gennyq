package life.genny.rules;

import java.io.IOException;

global life.genny.qwanda.message.QBulkMessage payload;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.CapabilityUtils;
import life.genny.qwanda.Answer;
import java.util.List;
import java.util.ArrayList;
import life.genny.model.OutputParamTreeSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.utils.TableUtils;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwandautils.JsonUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import org.drools.core.spi.KnowledgeHelper;

rule "FILTER_RFR_ASK"
	ruleflow-group 'AskFilters'
	salience 10000
	no-loop true
	when
		userToken : GennyToken ( code != "PER_SERVICE" ) 
		ask: Ask( 	ask.getQuestion().getCode() == "QUE_REASON_FOR_REJECTION_GRP" )
		beUtils : BaseEntityUtils( )
	
	then
		System.out.println(drools.getRule().getName() + " triggered");
		
		System.out.println("question code   :: " + ask.getQuestion().getCode());
		System.out.println("userToken Code   :: " + userToken.getUserCode());

		/* SET REPLACE TRUE */
		for (Ask childAsk : ask.getChildAsks()) {

			if (childAsk.getQuestionCode().equals("QUE_SUB_REASON_FOR_REJECTION")) {
				System.out.println("Setting QUE_SUB_REASON_FOR_REJECTION to disabled");
				childAsk.setHidden(true);
			}
		}

		/* Send the filtered asks back */
		QDataAskMessage msg = new QDataAskMessage(ask);
		msg.setAliasCode("ASK");	
		payload.add(msg); 

		drools.getKnowledgeRuntime().setGlobal("payload", payload); 

end
