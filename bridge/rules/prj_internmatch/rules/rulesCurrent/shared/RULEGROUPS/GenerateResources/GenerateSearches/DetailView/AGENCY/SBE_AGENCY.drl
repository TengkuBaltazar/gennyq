package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;

rule "SBE_AGENCY"
    ruleflow-group 'GenerateSearches'
     no-loop true
    when
       not  SearchEntity (code == "SBE_AGENCY")
        serviceToken : GennyToken( code == "PER_SERVICE")
     then
     	System.out.println("   Generate "+drools.getRule().getName() );
     	BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken);

		SearchEntity searchBE = new SearchEntity(drools.getRule().getName(), "Agency")
			.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "CPY_%")
			.addFilter("PRI_IS_AGENCY", true)
			.addColumn("PRI_NAME", "Name")
			.addColumn("PRI_LEGAL_NAME", "Legal Name")
			.addColumn("PRI_MOBILE", "Mobile")
			.addColumn("PRI_COMPANY_WEBSITE_URL", "Website")
			.addColumn("PRI_COMPANY_DESCRIPTION", "Company Description")
			.addColumn("PRI_LINKEDIN_URL", "Company LinkedIn Profile")
			.addColumn("PRI_ASSOC_INDUSTRY", "Company Industry")
			.addColumn("PRI_NUMBER_STAFF", "Number of Staff")
			.addColumn("PRI_IMAGE_URL", " ")
			.setDisplayMode("DETAIL_VIEW")

			.setPageStart(0).setPageSize(GennySettings.defaultPageSize);

		searchBE.setRealm(serviceToken.getRealm());
		insert(searchBE);
		VertxUtils.putObject(serviceToken.getRealm(), "", searchBE.getCode(), searchBE, serviceToken.getToken());

end
