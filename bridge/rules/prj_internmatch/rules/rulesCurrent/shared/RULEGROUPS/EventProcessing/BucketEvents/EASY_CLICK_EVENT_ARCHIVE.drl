package life.genny.rules;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.utils.TableUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.qwanda.message.QEventMessage;
import life.genny.utils.BucketUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;
import life.genny.model.NodeStatus;

rule "EASY_CLICK_EVENT_ARCHIVE"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "ACT_PRI_EVENT_ARCHIVE_.*")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
		ruleDetails : RuleDetails()
		beUtils : BaseEntityUtils()
    then
		System.out.println("Processing ARCHIVE CLICK EVENT : " + $message );


		String targetCode = $message.getData().getTargetCode();
		System.out.println("targetCode = " + targetCode);
		
		String code = $message.getData().getCode();
		System.out.println("code = " + code);	
		
 		Answer answer = new Answer(userToken.getUserCode(),targetCode,"PRI_STATUS","ARCHIVED");
 		beUtils.saveAnswer(answer);

 		if (targetCode.startsWith("PER_")) {
			Answer answerDisable = new Answer(userToken.getUserCode(), targetCode, "PRI_DISABLED", "true");
			beUtils.saveAnswer(answerDisable);

			TableUtils.moveEntity(targetCode, "SBE_AVAILABLE_INTERNS", null, beUtils);


			VertxUtils.sendToFrontEnd(userToken, answerDisable);
 		}

		VertxUtils.sendToFrontEnd(userToken, answer);

		if (targetCode != null) {
			BaseEntity internBE = beUtils.getBaseEntityByCode(targetCode);
			if (internBE != null) {

				SearchEntity searchBE = new SearchEntity("SBE_LINKED_APPLICATIONS", "Linked Applications")
					.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "APP_%")
					.addFilter("PRI_INTERN_CODE", SearchEntity.StringFilter.EQUAL, internBE.getCode())
					.setPageStart(0).setPageSize(100000);
		
				searchBE.setRealm(serviceToken.getRealm());
				List<BaseEntity> linkedApps = beUtils.getBaseEntitys(searchBE);

				/* MAKE SURE ALL APPS ARE DISABLED */
				for (BaseEntity app : linkedApps) {
					Boolean isDisabled = app.getValue("PRI_DISABLED", null);
					if (!isDisabled) {
						beUtils.saveAnswer(new Answer(userToken.getUserCode(), app.getCode(), "PRI_DISABLED", "true"));
						String appStatus = app.getValue("PRI_STATUS", null);
						if (appStatus != null) {
							String sourceCode = "SBE_"+appStatus+"_APPLICATIONS";
							if (appStatus.equals("PROGRESS")) {
								sourceCode = "SBE_INPROGRESS_APPLICATIONS";
							}
							TableUtils.moveEntity(app.getCode(), sourceCode, null, beUtils);
						} else {
							System.out.println("appStatus is null for " + app.getCode());
						}
					}
				}
			} else {
				System.out.println("internBE is null");
			}
		} else {
			System.out.println("targetCode in null");
		}
 		
 		
				
		retract( $message);
		
	end
