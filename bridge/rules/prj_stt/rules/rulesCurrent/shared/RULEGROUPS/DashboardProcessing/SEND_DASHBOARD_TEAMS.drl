package life.genny.rules;
import java.util.ArrayList;
import life.genny.qwandautils.JsonUtils;
import life.genny.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import life.genny.utils.BucketUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;
import life.genny.utils.TableUtils;
import org.drools.core.spi.KnowledgeHelper;
import life.genny.qwanda.datatype.Allowed;

rule "SEND_DASHBOARD_TEAMS"
	ruleflow-group 'DashboardProcessing'
	salience 10
	when
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken( code == "PER_SERVICE")
		output : OutputParam( )
		beUtils : BaseEntityUtils( )
		allowed: Allowed( code == "EDU_PRO_REP" || code == "STUDENT" )

	then
		System.out.println(drools.getRule().getName() + " triggered");

		SearchEntity searchBE = VertxUtils.getObject(beUtils.getGennyToken().getRealm(), "", "SBE_TEAMS", SearchEntity.class, beUtils.getGennyToken().getToken());
		searchBE.setDisplayMode("DASHBOARD");
		searchBE.setTitle("Your Classes");
		
		searchBE.addFilter("PRI_TEAM_MEMBERS", SearchEntity.StringFilter.LIKE, "%"+userToken.getUserCode()+"%");

        	long totalTime = TableUtils.searchTable(beUtils, searchBE, true);
		System.out.println("total took " + (totalTime) + " ms");

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */
end
