package life.genny.rules;


import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import life.genny.qwandautils.JsonUtils;
import org.apache.logging.log4j.Logger;


import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.utils.VertxUtils;
import life.genny.utils.BaseEntityUtils;
import life.genny.models.GennyToken;
import org.kie.api.runtime.process.WorkflowProcessInstance;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwandautils.GennySettings;
import life.genny.qwanda.datatype.DataType;
import life.genny.qwanda.attribute.Attribute;
import life.genny.qwanda.Question;
import life.genny.qwanda.Ask;

rule "CONVERT_PRI_WEIGHT_VALUES"
    ruleflow-group 'GenerateAsks'
     no-loop true
    when
       not  SearchEntity (code == "GENERATE_ADD_ITEMS")
        serviceToken : GennyToken( code == "PER_SERVICE")
     then
     	System.out.println("   Generate "+drools.getRule().getName() );
     	BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken);

	/* #############  DISCLAIMER #############

		THIS IS A VERY HACKY THING TO DO BUT I JUST AINT GOT TIME RIGHT NOW 

	*/

	SearchEntity definitionSearchBE = new SearchEntity("FIND_DEFINITIONS", "Find Definitions")
		.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "%DFN_%")
		.setPageStart(0)
		.setPageSize(100000);
	
	definitionSearchBE.setRealm(serviceToken.getRealm());
	
	List<BaseEntity> definitions = beUtils.getBaseEntitys(definitionSearchBE);

	System.out.println("Found " + definitions.size() + " definitions BEs");

	for (BaseEntity def : definitions) {
		String valueString = beUtils.getBaseEntityValueAsString(def.getCode(), "PRI_WEIGHT");
		if (valueString != null) {
			Double valueDouble = Double.valueOf(valueString);
			beUtils.removeEntityAttribute(def, "PRI_WEIGHT");
			beUtils.saveAnswer(new Answer(serviceToken.getUserCode(), def.getCode(), "PRI_WEIGHT", valueDouble));
		}
			
	}
	
	SearchEntity warningsSearchBE = new SearchEntity("FIND_WARNINGS", "Find Warnings")
		.addFilter("PRI_CODE", SearchEntity.StringFilter.LIKE, "%WRN_%")
		.setPageStart(0)
		.setPageSize(100000);

	warningsSearchBE.setRealm(serviceToken.getRealm());
	
	List<BaseEntity> warnings = beUtils.getBaseEntitys(warningsSearchBE);

	System.out.println("Found " + warnings.size() + " warning BEs");

	for (BaseEntity warn : warnings) {
		String valueString = beUtils.getBaseEntityValueAsString(warn.getCode(), "PRI_WEIGHT");
		if (valueString != null) {
			Double valueDouble = Double.valueOf(valueString);
			beUtils.removeEntityAttribute(warn, "PRI_WEIGHT");
			beUtils.saveAnswer(new Answer(serviceToken.getUserCode(), warn.getCode(), "PRI_WEIGHT", valueDouble));
		} 
	}

end
