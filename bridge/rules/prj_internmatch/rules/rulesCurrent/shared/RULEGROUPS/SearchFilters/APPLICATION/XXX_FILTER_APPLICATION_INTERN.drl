package life.genny.rules;

import java.io.IOException;

global life.genny.qwanda.message.QBulkMessage payload;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.CapabilityUtils;
import life.genny.qwanda.Answer;
import java.util.List;
import java.util.ArrayList;
import life.genny.model.OutputParamTreeSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.utils.TableUtils;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwanda.attribute.EntityAttribute;
import life.genny.qwandautils.JsonUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import org.drools.core.spi.KnowledgeHelper;

rule "FILTER_APPLICATION_INTERN"
	ruleflow-group 'SearchFilters'
	salience 20000
	no-loop true
	when
		userToken : GennyToken ( code != "PER_SERVICE" ) 
		searchBE: SearchEntity(code matches "SBE_APPLICATION_.*" )
		allowed: Allowed(code == "INTERN" )
		beUtils : BaseEntityUtils( )
		$message : QEventMessage()
	
	then
		System.out.println(drools.getRule().getName() + " triggered");
		
		System.out.println("searchCode   :: " + searchBE.getCode());
		System.out.println("userToken Code   :: " + userToken.getUserCode());

		String parentCode = $message.getData().getParentCode();
		System.out.println("parentCode ::  " + parentCode);

		/* remove supervisor details */		
		searchBE.removeAttribute("COL_PRI_SUPER_JOB_TITLE");
		searchBE.removeAttribute("COL_PRI_SUPER_NAME");
		searchBE.removeAttribute("COL_PRI_SUPER_EMAIL");
		searchBE.removeAttribute("COL_PRI_SUPER_MOBILE");

		/* Create  QDataBaseEntityMessage for SearchEntity */
		QDataBaseEntityMessage msg = new QDataBaseEntityMessage(searchBE);
		msg.setAliasCode("SBE");	
		payload.add(msg); 

		drools.getKnowledgeRuntime().setGlobal("payload", payload); 
		/* retract(allowed);  */
end
