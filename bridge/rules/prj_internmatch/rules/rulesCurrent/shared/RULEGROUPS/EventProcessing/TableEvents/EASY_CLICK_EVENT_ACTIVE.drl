package life.genny.rules;
import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.utils.TableUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.qwanda.message.QEventMessage;
import life.genny.utils.BucketUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;
import life.genny.model.NodeStatus;

rule "EASY_CLICK_EVENT_ACTIVE"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "ACT_PRI_EVENT_ACTIVE_.*")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
		ruleDetails : RuleDetails()
    then
		System.out.println("Processing ACTIVE CLICK EVENT : " + $message );


		String targetCode = $message.getData().getTargetCode();
		System.out.println("targetCode = " + targetCode);
		
		String code = $message.getData().getCode();
		System.out.println("code = " + code);	
		
		String[] codes = code.split("_");
		String type = codes[4];
		System.out.println("type = " + type);
		
		if (type.equals("INTERNSHIP")) {
 				Answer answer = new Answer(userToken.getUserCode(),targetCode,"PRI_STATUS","ACTIVE");
 				BaseEntityUtils beUtils = new BaseEntityUtils(userToken);
 				beUtils.saveAnswer(answer);
 		} else {
 			System.out.println("type is not Internship!!");
 		}

				
		retract( $message);
		
	end
