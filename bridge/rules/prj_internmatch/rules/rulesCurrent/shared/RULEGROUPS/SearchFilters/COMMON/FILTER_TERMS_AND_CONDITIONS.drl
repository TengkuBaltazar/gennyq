package life.genny.rules;

import java.io.IOException;

global life.genny.qwanda.message.QBulkMessage payload;

import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.CapabilityUtils;
import life.genny.qwanda.Answer;
import java.util.List;
import java.util.ArrayList;
import life.genny.model.OutputParamTreeSet;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.utils.TableUtils;
import life.genny.qwanda.entity.SearchEntity;
import life.genny.qwandautils.JsonUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import org.drools.core.spi.KnowledgeHelper;

rule "FILTER_TERMS_AND_CONDITIONS"
	ruleflow-group 'SearchFilters'
	salience 10000
	no-loop true
	when
		userToken : GennyToken ( code != "PER_SERVICE" ) 
		beUtils : BaseEntityUtils()
		searchBE: SearchEntity(
			code matches "SBE_SUMMARY_TERMS_AND_CONDITIONS_.*"
			)
		allowed: Allowed(
			code == "INTERN" ||
			code == "HOST_CPY_REP" ||
			code == "EDU_PRO_REP"
			)
	
	then
		System.out.println(drools.getRule().getName() + " triggered");
		
		System.out.println("userCode     :: " + userToken.getUserCode());
		System.out.println("searchCode   :: " + searchBE.getCode());

		String userCode = userToken.getUserCode();
		if(userCode == null){
			System.out.println("userCode is null");
			return;
		}

		searchBE.addFilter("PRI_CODE", SearchEntity.StringFilter.EQUAL, userCode);

		/* Create  QDataBaseEntityMessage for SearchEntity */
		QDataBaseEntityMessage msg = new QDataBaseEntityMessage(searchBE);
		msg.setAliasCode("SBE");	
		payload.add(msg); 

		drools.getKnowledgeRuntime().setGlobal("payload", payload); 
end
