package life.genny.rules;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.utils.OutputParam;
import life.genny.utils.TaskUtils;
import java.util.List;
import java.util.ArrayList;
import life.genny.utils.QuestionUtils;

rule "LNK_DID_MENTOR_AND_MENTEE"
	ruleflow-group 'DataProcessing'
	salience 500
	no-loop true
	when
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		answer : Answer( attributeCode == "LNK_DID_MENTOR_AND_MENTEE" )
		output : OutputParam()
		beUtils : BaseEntityUtils()

	then
		System.out.println(drools.getRule().getName()+": Rule fired");

		/* Get Target User BE */
 		String targetCode = answer.getTargetCode();
 		System.out.println("LNK_DID_MENTOR_AND_MENTEE:: targetCode = " + targetCode);
 		String value = answer.getValue();
 		System.out.println("LNK_DID_MENTOR_AND_MENTEE:: value = " + value);

		QDataAskMessage askMsg = QuestionUtils.getAsks(userToken.getUserCode(), targetCode, "QUE_MENTOR_AND_MENTEE_UPDATE_GRP", userToken.getToken());

		if (value.equals("[\"SEL_YES\"]") || value.equals("[\"SEL_NO\"]")) {
			if (askMsg != null) {
				/* Hide Questions if answer is NO */
				if (value.equals("[\"SEL_NO\"]")) {
					System.out.println("MSG = " + JsonUtils.toJson(askMsg));
					if ((askMsg.getItems().length > 0)) {
						for (Ask childAsk : askMsg.getItems()[0].getChildAsks()) {

							String attrCode = childAsk.getQuestionCode();

							if (!attrCode.equals("QUE_SUBMIT") && !attrCode.equals("QUE_DID_MENTOR_AND_MENTEE") && !attrCode.equals("QUE_WHY_DID_YOU_NOT_MEET")) {
								childAsk.setHidden(true);
							}
						}
					} else {
						System.out.println("Ask Message Items is empty!!!");
					}
				}

				/* Hide Questions if answer is YES */
				if (value.equals("[\"SEL_YES\"]")) {
					System.out.println("MSG = " + JsonUtils.toJson(askMsg));
					if ((askMsg.getItems().length > 0)) {
						for (Ask childAsk : askMsg.getItems()[0].getChildAsks()) {

							String attrCode = childAsk.getQuestionCode();

							if (attrCode.equals("QUE_WHY_DID_YOU_NOT_MEET")) {
								childAsk.setHidden(true);
							}
						}
					} else {
						System.out.println("Ask Message Items is empty!!!");
					}
				}

				/* Send Asks regardless */
				askMsg.setToken(userToken.getToken());
				askMsg.setReplace(true);
				VertxUtils.writeMsg("webcmds", askMsg);
			} else {
				System.out.println("Could not fetch ask from cache: QUE_MENTOR_AND_MENTEE_UPDATE_GRP");
			}
		} else {
			System.out.println("Value is invalid");
		}

		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");
end
